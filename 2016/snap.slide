Understanding Snap on classic desktop about 20 minutes
Ubuntu Offline meeting 16.06

Kentaro KAZUHAMA
kazken3@gmail.com
@kazken3

* What is snappy?
- OSとアプリケーションを分割
- トランザクショナルなイメージベースのシステム
- ファイルはリードオンリーベース
- 署名やフィンガープリントによる開発者の保証
- 差分管理

.image ./snap/layer.png 

* Snappy,Snappy Ubuntu Core,Snap??

* Snappy,Snappy Ubuntu Core,Snap??
- Snappy:パッケージシステム
    
- Snappy Ubuntu Core:Snappyを搭載したUbuntu Core

- Snap:Snappyで管理可能なアプリケーションフォーマット

* Various snap packages
- App snap : アプリケーション 

- Kernel snap : 特定のカーネルをエミュレーション(e.g. canonical-pc-linux)

- Gadget snap : 特定ハード向け(e.g. Raspberry Pi 2, BeagleBone Black)

- OS snap : ベースシステム。つまり *"ubuntu-core* *snap"*

* Install snap apps on desktop
- Technology preview in 16.04
動くが制限事項あり(e.g.ロールバックできない、ubuntu-coreがremoveできない)

- "snap" command
snappy on desktopではsnapコマンド


* How works Snap App on classic desktop?
- /snap/$name/$version/にインストール
- 実行時はubuntu-core-launcherがUbuntu Coreを叩く。snap向けの環境変数を適用
- スレイブマウントネームスペースを作成
- プライベート/tmpディレクトリを作成
- ubuntu-core-launcherがUbuntu Coreから/bin, /lib, /lib64, /sbin, /usrをマウントし、AppArmorやSeccompの制限を適用
- アプリケーションが起動。AppArmorの制限を緩和することでホストの/dev, /proc/, /sys, /mediaを見れる


* What is snap command?
- snapコマンドはsnapdを操作するためのコマンド
16.04から"snapd"パッケージとして追加

  Available commands:
  abort       Abort a pending change
  ack         Adds an assertion to the system
  change      List a change's tasks
  changes     List system changes
  connect     Connects a plug to a slot
  disconnect  Disconnects a plug from a slot
  find        Finds packages to install
  help        Help
  install     Install a snap to the system
  interfaces  Lists interfaces in the system
  known       Shows known assertions of the provided type
  list        List installed snaps
  login       Authenticates on snapd and the store
  logout      Log out of the store
  refresh     Refresh a snap in the system
  remove      Remove a snap from the system
  try         Try an unpacked snap in the system


- snapdはREST API経由でUbuntu Coreと接続
See [[https://developer.ubuntu.com/en/snappy/guides/rest/]]

* Demo - Access to Ubuntu Core by REST API
* How to make snap package?
- *sudo* *apt* *install* *snapcraft* を実行
- コードを書く
- *snapcraft* *init* を実行
- 作成された *snapcraft.yml* を記載
- *snapcraft* を実行
- 完成！

* Snapcraft
- Pull
- Build
- Stage
- Strip
- Snap!

* Demo - Snapcraft building

* Inside snap
- squashfs
- unsquashfs *.snap

    .
    ├── bin
    │   ├── build
    │   └── golang-hello
    ├── command-hello.wrapper
    └── meta
        └── snap.yaml

* Conclusion
- Separate
- 
- 

* Any questions?
